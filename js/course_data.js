// Initializing array.
var courseObj = [];

// Template.
var courseTemplate = {
	// Array initialization.
	courseSpr: [],
	courseData: [],
	coursePar: [],
	courseObs: [],
	courseMsc: msc_course_default,
	courseLen: 0,
	courseRec: 0,
	coursePre: [],
	
	// Getting wind.
	WindSpeed: function() {return(0);},
	WindDirection: function() {return(0);},
	
	// Array population.
	Populate: function() {
		// Misc.
		this.courseSpr = spr_course_range;
		this.coursePar.push(3);
		
		// Hole layouts.
		//this.courseData.push();
		
		// Obstacles.
		//this.courseObs.push([]);
		
		// End.
	},
	
	// Special function.
	Special: function() {
		// Nothing.
	}
	
	// End.
};



////////////////////////////////
// TAMATOWN TAMAGOLFI COMPLEX //
////////////////////////////////
courseObj.push({
	// Array initialization.
	courseSpr: [],
	courseData: [],
	coursePar: [],
	courseObs: [],
	courseMsc: msc_course_default,
	courseLen: 0,
	courseRec: -17,
	coursePre: [new ObsMushroom(3, 1, 0), new ObsMushroom(5, 2, 1), new ObsMushroom(6, 1, 2)],
	
	// Getting wind.
	WindSpeed: function() {return(randomMax(2));},
	WindDirection: function() {return(Math.round(randomMax(3) * 90));},
	
	// Array population.
	Populate: function() {
		// Misc.
		this.courseSpr = spr_course_tamatown;
		this.coursePar.push(3, 4, 5, 4, 4, 3, 5, 6, 6);
		
		// Hole layouts.
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [2, 2, 2, 2], [2, 2, 2, 2], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [2, 2, 2, 2], [2, 2, 2, 2], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [2, 2, 2, 2], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 1, 0, 1], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [1, 1, 1, 1], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 4, 4, 0], [0, 4, 4, 0], [0, 4, 4, 0]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 3, 3, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [1, 1, 1, 1], [1, 1, 1, 1], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [0, 1, 1, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 3, 3, 1], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 1, 1, 3], [3, 3, 3, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [2, 2, 2, 2], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [2, 2, 2, 2], [4, 4, 2, 2], [4, 4, 4, 2], [4, 4, 4, 4], [1, 4, 4, 4], [1, 1, 4, 4]]);
		this.courseData.push([[3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 3, 3], [3, 3, 3, 3], [0, 0, 3, 3], [0, 0, 3, 3], [1, 1, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 1, 1], [0, 0, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 3, 3], [0, 0, 3, 3], [0, 0, 3, 3], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 1, 1], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [1, 1, 1, 1]]);
		
		// Obstacles.
		this.courseObs.push([], [], []);
		this.courseObs.push([new ObsMushroom(18, 1, 0), new ObsMushroom(18, 2, 0), new ObsMushroom(18, 3, 0), new ObsMushroom(22, 0, 0), new ObsMushroom(22, 1, 0), new ObsMushroom(22, 2, 0), new ObsMushroom(43, 0, 0), new ObsMushroom(43, 1, 0), new ObsMushroom(43, 2, 0), new ObsMushroom(43, 3, 0)]);
		this.courseObs.push([new ObsMushroom(18, 0, 2), new ObsMushroom(18, 1, 2), new ObsMushroom(18, 2, 2), new ObsMushroom(18, 3, 2), new ObsMushroom(22, 1, 2), new ObsMushroom(22, 2, 2), new ObsMushroom(44.5, 0, 1), new ObsMushroom(44.5, 1, 1), new ObsMushroom(44.5, 2, 1), new ObsMushroom(44.5, 3, 1)]);
		this.courseObs.push([new ObsMushroom(18, 1, 2), new ObsMushroom(18, 2, 2), new ObsMushroom(22, 1, 2), new ObsMushroom(22, 2, 2), new ObsMushroom(26, 1, 2), new ObsMushroom(26, 2, 2), new ObsMushroom(30, 1, 2), new ObsMushroom(30, 2, 2), new ObsMushroom(34, 1, 2), new ObsMushroom(34, 2, 2)]);
		this.courseObs.push([new ObsMushroom(18, 0, 0), new ObsMushroom(18, 1, 0), new ObsMushroom(18, 2, 0), new ObsMushroom(18, 3, 0), new ObsMushroom(36, 0, 1), new ObsMushroom(36, 1, 1), new ObsMushroom(36, 2, 1), new ObsMushroom(36, 3, 1), new ObsMushroom(46, 0, 2), new ObsMushroom(46, 3, 2), new ObsMushroom(50, 0, 2), new ObsMushroom(50, 3, 2), new ObsMushroom(54, 0, 2), new ObsMushroom(54, 3, 2), new ObsMushroom(62, 0, 0), new ObsMushroom(62, 3, 0)]);
		this.courseObs.push([new ObsMushroom(20, 0, 2), new ObsMushroom(20, 1, 2), new ObsMushroom(20, 2, 2), new ObsMushroom(20, 3, 2), new ObsMushroom(21, 0, 2), new ObsMushroom(21, 1, 2), new ObsMushroom(21, 2, 2), new ObsMushroom(21, 3, 2), new ObsMushroom(49, 0, 0), new ObsMushroom(49, 3, 0), new ObsMushroom(59, 1, 0), new ObsMushroom(59, 2, 0), new ObsMushroom(78, 0, 1), new ObsMushroom(79, 0, 1), new ObsMushroom(79, 1, 1), new ObsMushroom(78, 0, 1), new ObsMushroom(67, 0, 1), new ObsMushroom(67, 2, 1), new ObsMushroom(68, 1, 1), new ObsMushroom(68, 3, 1), new ObsMushroom(69, 0, 1), new ObsMushroom(69, 2, 1), new ObsMushroom(70, 1, 1), new ObsMushroom(70, 3, 1), new ObsMushroom(71, 0, 1), new ObsMushroom(71, 2, 1), new ObsMushroom(72, 1, 1), new ObsMushroom(72, 3, 1), new ObsMushroom(73, 0, 1), new ObsMushroom(73, 2, 1)]);
		this.courseObs.push([new ObsMushroom(25, 0, 2), new ObsMushroom(25, 1, 2), new ObsMushroom(25, 2, 2), new ObsMushroom(25, 3, 2), new ObsMushroom(38, 0, 1), new ObsMushroom(38, 1, 1), new ObsMushroom(38, 2, 1), new ObsMushroom(38, 3, 1), new ObsMushroom(55, 0, 0), new ObsMushroom(55, 1, 0), new ObsMushroom(59, 0, 2), new ObsMushroom(59, 1, 2), new ObsMushroom(63, 2, 0), new ObsMushroom(63, 3, 0), new ObsMushroom(67, 2, 2), new ObsMushroom(67, 3, 2), new ObsMushroom(88, 0, 1), new ObsMushroom(88, 1, 1), new ObsMushroom(88, 2, 1), new ObsMushroom(88, 3, 1), new ObsMushroom(93, 0, 1), new ObsMushroom(93, 1, 1), new ObsMushroom(93, 2, 1), new ObsMushroom(93, 3, 1)]);
		
		// End.
	},
	
	// Special function.
	Special: function() {
		// Nothing.
	}
	
	// End.
});



/////////////////////
// HOUSE OF SPOOKS //
/////////////////////
courseObj.push({
	// Array initialization.
	courseSpr: [],
	courseData: [],
	coursePar: [],
	courseObs: [],
	courseMsc: msc_course_tamaween,
	courseLen: 0,
	courseRec: -8,
	coursePre: [new ObsMushroom(2, 1, 0), new ObsMushroom(3, 2, 1), new ObsMushroom(4, 1, 2), new ObsGhost(6, 2, 1), new ObsKabodebitchi(7, 1)],
	
	// Getting wind.
	WindSpeed: function() {return(randomMax(4) + 1);},
	WindDirection: function() {return(Math.round(randomMax(7) * 45));},
	
	// Array population.
	Populate: function() {
		// Misc.
		this.courseSpr = spr_course_tamaween;
		this.coursePar.push(4, 3, 5, 6, 6, 3, 4, 5, 7);
		
		// Hole layouts.
		this.courseData.push([[2, 0, 0, 2], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 4, 4, 1], [1, 4, 4, 1], [1, 4, 4, 1], [1, 4, 4, 1], [1, 1, 1, 1]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 1, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 1, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [0, 0, 0, 0], [0, 3, 3, 0], [3, 3, 3, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [0, 3, 3, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 0, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 0, 0, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 3, 3, 0], [3, 3, 3, 3], [3, 3, 3, 3], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [3, 1, 1, 1], [3, 3, 1, 1], [1, 1, 3, 1], [1, 1, 3, 3], [1, 1, 3, 3], [1, 1, 1, 3], [1, 1, 3, 3], [1, 1, 3, 1], [3, 3, 1, 1], [3, 1, 1, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 2, 2, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [3, 2, 2, 3], [2, 2, 2, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 3, 3, 0], [0, 3, 3, 0], [0, 0, 0, 0], [2, 0, 0, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 3, 3, 0], [0, 3, 3, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 4], [0, 0, 4, 4], [0, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 3, 3, 0], [0, 0, 3, 0], [0, 0, 0, 0], [0, 3, 0, 0], [0, 3, 3, 0], [0, 3, 3, 0], [0, 0, 3, 0], [0, 3, 3, 0], [0, 3, 0, 0], [0, 0, 0, 0], [0, 0, 3, 0], [0, 3, 3, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 2], [0, 0, 2, 2], [0, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 2], [0, 0, 2, 2], [0, 2, 2, 2], [2, 4, 2, 2], [2, 4, 2, 2]]);
		this.courseData.push([[3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 0, 0, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 3, 0], [3, 0, 3, 0], [3, 0, 4, 3], [4, 3, 4, 3], [4, 3, 3, 4], [3, 4, 3, 4], [3, 4, 3, 3]]);
		this.courseData.push([[2, 0, 0, 2], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [3, 4, 4, 3], [3, 4, 4, 3], [3, 4, 4, 3], [3, 4, 4, 3], [3, 4, 4, 3], [3, 4, 4, 3]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 1, 1, 2], [2, 1, 1, 2], [2, 1, 1, 2], [2, 1, 1, 2], [2, 1, 1, 2], [2, 1, 1, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 3, 3, 1], [3, 3, 3, 3], [3, 3, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 0, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 3, 3, 0], [0, 0, 0, 0], [2, 0, 0, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 2, 2], [2, 0, 2, 2], [0, 0, 2, 2], [0, 0, 2, 2], [0, 2, 2, 2], [0, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 2], [0, 2, 2, 2], [0, 2, 2, 2], [0, 2, 2, 2], [0, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 4], [2, 2, 2, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 3, 3], [2, 3, 1, 3], [2, 3, 3, 3], [2, 3, 3, 1], [2, 3, 3, 1], [2, 3, 3, 1], [2, 2, 3, 3], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 3, 3, 2], [3, 3, 3, 3], [3, 1, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 0, 3, 3], [3, 3, 3, 3], [2, 3, 3, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 3, 3, 2], [2, 3, 3, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 3, 3, 2], [2, 3, 3, 2], [2, 3, 3, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 3, 3, 2], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 3, 3, 0], [0, 3, 3, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [2, 3, 3, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [0, 0, 0, 0]]);
		
		// Obstacles.
		this.courseObs.push([new ObsMushroom(18, 0, 0), new ObsMushroom(18, 3, 0), new ObsGhost(21, 0, 1), new ObsGhost(21, 3, 1), new ObsGhost(25, 0, 2), new ObsGhost(25, 3, 0), new ObsGhost(29, 0, 1), new ObsGhost(29, 3, 1), new ObsGhost(33, 0, 2), new ObsGhost(33, 3, 0)]);
		this.courseObs.push([new ObsKabodebitchi(21, 0), new ObsKabodebitchi(21, 1), new ObsKabodebitchi(21, 2), new ObsKabodebitchi(21, 3), new ObsMushroom(22, 0, 1), new ObsMushroom(22, 3, 1), new ObsMushroom(23, 0, 1), new ObsMushroom(23, 3, 1), new ObsMushroom(24, 0, 1), new ObsMushroom(24, 3, 1), new ObsMushroom(25, 0, 1), new ObsMushroom(25, 3, 1), new ObsMushroom(26, 0, 1), new ObsMushroom(26, 1, 1), new ObsMushroom(26, 2, 1), new ObsMushroom(26, 3, 1)]);
		this.courseObs.push([new ObsKabodebitchi(19, 0), new ObsKabodebitchi(19, 1), new ObsKabodebitchi(19, 2), new ObsKabodebitchi(19, 3), new ObsKabodebitchi(29.5, 0.5), new ObsKabodebitchi(29.5, 2.5), new ObsGhost(31, 0, 2), new ObsGhost(31, 3, 0), new ObsGhost(35, 0, 2), new ObsGhost(35, 3, 0), new ObsMushroom(38, 0, 0), new ObsMushroom(38, 3, 0), new ObsGhost(39, 0, 1), new ObsGhost(39, 3, 1), new ObsKabodebitchi(63, 1), new ObsKabodebitchi(63, 2)]);
		this.courseObs.push([new ObsKabodebitchi(20, 0), new ObsKabodebitchi(20, 3), new ObsGhost(27, 0, 2), new ObsGhost(27, 3, 0), new ObsGhost(31, 0, 2), new ObsGhost(31, 3, 0), new ObsMushroom(45, 0, 1), new ObsMushroom(45, 3, 1), new ObsMushroom(47, 1, 1), new ObsMushroom(47, 2, 1), new ObsMushroom(49, 0, 0), new ObsMushroom(49, 3, 0), new ObsMushroom(51, 1, 0), new ObsMushroom(51, 2, 0), new ObsMushroom(64, 1, 1), new ObsMushroom(64, 2, 1), new ObsMushroom(65, 1, 1), new ObsMushroom(65, 2, 1), new ObsMushroom(70, 1, 1), new ObsMushroom(70, 2, 1), new ObsMushroom(71, 1, 1), new ObsMushroom(71, 2, 1)]);
		this.courseObs.push([new ObsKabodebitchi(23, 1), new ObsKabodebitchi(23, 2), new ObsMushroom(41, 0, 0), new ObsMushroom(41, 3, 0), new ObsMushroom(56, 0, 0), new ObsMushroom(56, 3, 0), new ObsGhost(79, 1, 1), new ObsGhost(83, 1, 1)]);
		this.courseObs.push([new ObsGhost(27, 0, 1), new ObsGhost(29, 1, 1), new ObsGhost(26, 2, 1), new ObsGhost(28, 3, 1), new ObsKabodebitchi(28.5, 0), new ObsKabodebitchi(29.5, 0), new ObsKabodebitchi(30.5, 1), new ObsKabodebitchi(31.5, 1), new ObsKabodebitchi(27.5, 2), new ObsKabodebitchi(28.5, 2), new ObsKabodebitchi(29.5, 3), new ObsKabodebitchi(30.5, 3)]);
		this.courseObs.push([new ObsKabodebitchi(0, 0), new ObsKabodebitchi(1, 0), new ObsKabodebitchi(0, 3), new ObsKabodebitchi(1, 3), new ObsKabodebitchi(25, 0), new ObsKabodebitchi(25, 1), new ObsKabodebitchi(25, 2), new ObsKabodebitchi(25, 3), new ObsMushroom(28, 1, 1), new ObsMushroom(28, 2, 1), new ObsMushroom(31, 1, 1), new ObsMushroom(31, 2, 1), new ObsMushroom(34, 1, 1), new ObsMushroom(34, 2, 1), new ObsMushroom(37, 1, 1), new ObsMushroom(37, 2, 1), new ObsMushroom(40, 1, 1), new ObsMushroom(40, 2, 1), new ObsMushroom(41, 0, 1), new ObsMushroom(42, 0, 1), new ObsMushroom(43, 0, 1), new ObsMushroom(44, 0, 1), new ObsMushroom(45, 0, 1), new ObsMushroom(46, 0, 1), new ObsMushroom(41, 3, 1), new ObsMushroom(42, 3, 1), new ObsMushroom(43, 3, 1), new ObsMushroom(44, 3, 1), new ObsMushroom(45, 3, 1), new ObsMushroom(46, 3, 1)]);
		this.courseObs.push([new ObsGhost(26, 1, 1), new ObsGhost(27, 1, 2), new ObsMushroom(51, 0, 2), new ObsGhost(58, 0, 2), new ObsMushroom(62, 0, 1), new ObsMushroom(62, 1, 1), new ObsMushroom(62, 2, 1)]);
		this.courseObs.push([new ObsKabodebitchi(18, 3), new ObsGhost(33, 1, 1), new ObsMushroom(63, 1, 2), new ObsMushroom(63, 2, 2), new ObsKabodebitchi(64, 1), new ObsKabodebitchi(64, 2), new ObsKabodebitchi(65, 1), new ObsKabodebitchi(65, 2), new ObsKabodebitchi(66, 1), new ObsKabodebitchi(66, 2), new ObsMushroom(77, 1, 1), new ObsMushroom(77, 2, 1), new ObsMushroom(101, 0, 1), new ObsMushroom(101, 1, 1), new ObsMushroom(101, 2, 1), new ObsMushroom(101, 3, 1)]);
		
		// End.
	},
	
	// Special function.
	Special: function() {
		// Nothing.
	}
	
	// End.
});



////////////////
// POPULATING //
////////////////
for(i = 0; i < courseObj.length; i++) {
	courseObj[i].Populate();
	courseObj[i].courseLen = courseObj[i].courseData.length;
	/*for(j = 0; j < courseObj[i].courseObs.length; j++) {
		depthSort(courseObj[i].courseObs[j]);
	}*/
}